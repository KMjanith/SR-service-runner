services:
  rabbitmq:
    image: rabbitmq:4.0-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672" # Management UI
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ${FRONTEND_PATH}
      dockerfile: Dockerfile.dev
    ports:
      - "80:80"
    container_name: frontend
    depends_on:
      rabbitmq:
        condition: service_healthy
      api-gateway:
        condition: service_started
    volumes:
      - ${FRONTEND_PATH}:/app

  authentication-service:
    build:
      context: ${AUTH_SERVICE_PATH}
      dockerfile: Dockerfile.dev
    ports:
      - "8082:8082"
    env_file:
      - envFiles/auth.env
    container_name: authservice
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ${AUTH_SERVICE_PATH}:/app

  api-gateway:
    build:
      context: ${API_GATEWAY_PATH}
      dockerfile: Dockerfile.dev
    ports:
      - "8081:8081"
    env_file:
      - envFiles/apiGateway.env
    container_name: api-gateway
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ${API_GATEWAY_PATH}:/app

  sorting-service:
    build:
      context: ${SORTING_PATH}
      dockerfile: Dockerfile.dev
    ports:
      - "8083:8083"
    env_file:
      - envFiles/sorting.env
    container_name: sorting-service
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ${SORTING_PATH}:/app


